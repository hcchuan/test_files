user  www www;

worker_processes 8;

error_log  /home/wwwlogs/nginx_error.log  crit;

pid        /usr/local/nginx/logs/nginx.pid;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 51200;

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;#nginx在已经得到一个新连接的通知时，接收尽可能多的连接
    }
	
http
    {
        include       mime.types;
        default_type  application/octet-stream;

        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 1000m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 0;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.
		
		log_format  timed_combined  '$remote_addr - $remote_user [$time_local] "$request" '

			  '$status $body_bytes_sent "$http_referer" '

			  '"$http_user_agent" "$http_x_forwarded_for" '

				'request_time[$request_time] upstream_response_time[$upstream_response_time]';
		

        server_tokens off;
        access_log off;
		#include /usr/local/nginx/conf/vhost/*.conf;
        include vhost/*.conf;
			
server
    {
        listen 443 ssl;
        listen [::]:443 default_server ipv6only=on;
        #server_name _;
		server_name file.anyremote.cn;
        index index.html index.htm index.php;
        root /mnt/disk2/www/file.if-ar.com/;
		ssl_certificate "/home/cert/anyremote/Nginx/server.crt";
        ssl_certificate_key "/home/cert/anyremote/Nginx/server.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5; #加密套件。
        ssl_prefer_server_ciphers  on;
		
		# Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

		
		# PHP配置
        location ~ \.php$ {
         try_files $uri =404;
         include fastcgi.conf;
         fastcgi_pass 127.0.0.1:9001;
        }
		
		location / {   
        #autoindex on;                            #开启目录浏览功能；   
        #autoindex_exact_size off;            #关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；   
        autoindex_localtime on;              #开启以服务器本地时区显示文件修改日期！   
		#允许跨域访问
        add_header 'Access-Control-Allow-Origin' '*'; #允许来自所有的访问地址
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS'; #支持请求方式
        add_header 'Access-Control-Allow-Headers' 'Content-Type,*';
        }
				
        access_log  /home/wwwlogs/access.log;
    }
	
	upstream nodejs_3000{
      server 127.0.0.1:3000; #你的Express项目端口
      keepalive 64;
    }
	
    server {
         listen 3007 ssl;
         server_name file.anyremote.cn;
		ssl_certificate "/home/cert/anyremote/Nginx/server.crt";
        ssl_certificate_key "/home/cert/anyremote/Nginx/server.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5; #加密套件。
        ssl_prefer_server_ciphers  on;
		
         location / {
		 	  #允许跨域访问
			  add_header Access-Control-Allow-Origin *; #允许来自所有的访问地址
			  add_header 'Access-Control-Allow-Credentials' 'true';
			  add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS'; #支持请求方式
			  add_header 'Access-Control-Allow-Headers' 'Content-Type,*';
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host  $http_host;
              proxy_set_header X-Nginx-Proxy true;
              proxy_set_header Connection "";
              proxy_pass      https://nodejs_3000;  #如果express项目用的是http协议，则此处用http
         }
    }
	
	upstream nodejs_3001{
      server 127.0.0.1:3001; #你的Express项目端口
      keepalive 64;
    }
	
    server {
         listen 8081 ssl;
         server_name video.anyremote.cn;
		ssl_certificate "/home/cert/anyremote/Nginx/server.crt";
        ssl_certificate_key "/home/cert/anyremote/Nginx/server.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5; #加密套件。
        ssl_prefer_server_ciphers  on;
		
         location / {
		 	  #允许跨域访问
			  add_header Access-Control-Allow-Origin *; #允许来自所有的访问地址
			  add_header 'Access-Control-Allow-Credentials' 'true';
			  add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS'; #支持请求方式
			  add_header 'Access-Control-Allow-Headers' 'Content-Type,*';
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host  $http_host;
              proxy_set_header X-Nginx-Proxy true;
              proxy_set_header Connection "";
              proxy_pass      https://nodejs_3001;  #如果express项目用的是http协议，则此处用http
         }
    }
				
	server
    {
        listen 444 ssl;
        listen [::]:444 default_server ipv6only=on;
        #server_name _;
		server_name video.anyremote.cn;
        index index.html index.htm index.php;
        root /mnt/disk2/www/video.if-ar.com/;
		ssl_certificate "/home/cert/anyremote/Nginx/server.crt";
        ssl_certificate_key "/home/cert/anyremote/Nginx/server.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5; #加密套件。
        ssl_prefer_server_ciphers  on;
		
		# Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

		
		# PHP配置
        location ~ \.php$ {
         try_files $uri =404;
         include fastcgi.conf;
         fastcgi_pass 127.0.0.1:9001;
        }
		
		location / { 
        #autoindex on;                            #开启目录浏览功能；   
        #autoindex_exact_size off;            #关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；   
        autoindex_localtime on;              #开启以服务器本地时区显示文件修改日期！  
        #允许跨域访问
        add_header 'Access-Control-Allow-Origin' '*'; #允许来自所有的访问地址
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS'; #支持请求方式
        add_header 'Access-Control-Allow-Headers' 'Content-Type,*';		
        }
			
        access_log  /home/wwwlogs/access.log;
    }	
		
	server
    {
        listen       8888 default_server;
        listen       [::]:8888 default_server;
		server_name test1.if-ar.com;
        index index.html index.htm index.php;
        root /home/wwwroot/test_8888/;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

	location / {
		 index index.html index.htm index.php;
		 if (!-e $request_filename) {
			 rewrite ^/index.php(.*)$ /index.php?s=$1 last;
			 rewrite ^(.*)$ /index.php?s=$1 last;
			 break;
		 }
	 }
    location ~ \.php/?.*$ {
        fastcgi_pass   127.0.0.1:9003;
        fastcgi_index  index.php;
        #加载Nginx默认"服务器环境变量"配置
        include        fastcgi.conf;
        
        #设置PATH_INFO并改写SCRIPT_FILENAME,SCRIPT_NAME服务器环境变量
        set $fastcgi_script_name2 $fastcgi_script_name;
        if ($fastcgi_script_name ~ "^(.+\.php)(/.+)$") {
            set $fastcgi_script_name2 $1;
            set $path_info $2;
        }
        fastcgi_param   PATH_INFO $path_info;
        fastcgi_param   SCRIPT_FILENAME   $document_root$fastcgi_script_name2;
        fastcgi_param   SCRIPT_NAME   $fastcgi_script_name2;
    }

        access_log  /home/wwwlogs/access.log;

    }
	
}

